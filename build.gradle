/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.2/userguide/java_library_plugin.html
 */

plugins {
  id "maven"
  id "maven-publish"
  id "signing"
  id "eclipse"
  id "java-library"
}

project.group = 'com.onkiup'
project.version = '0.9'

compileJava   {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'com.onkiup:linker-parser-api:0.9'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

/**
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: nexusUsername, password: nexusPassword)
      }
      */

      pom.project {
        name 'Linker-Parser'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'Text parser that uses Java classes as grammar definitions'
        url 'https://github.com/chedim/linker-parser'

        scm {
          connection 'scm:git:https://github.com/chedim/linker-parser.git'
          developerConnection 'scm:git:git@github.com:chedim/linker-parser.git'
          url 'https://github.com/chedim/linker-parser'
        }

        licenses {
          license {
            name 'MIT License'
            url 'https://raw.githubusercontent.com/chedim/linker-parser/master/LICENSE'
          }
        }

        developers {
          developer {
            id 'chedim'
            name 'Dmitrii Chechetkin'
            email 'chedim@chedim.com'
          }
        }
      }
    }
  }
}
